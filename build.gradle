// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        versions = [
                kotlin          : '1.3.50',
                rxJava          : '2.2.11',
                rxAndroid       : '2.1.1',
                room            : '2.1.0',
                lifecycle       : '2.0.0',
                appcompat       : '1.0.2',
                dagger          : '2.24',
                support         : '28.0.0',
                material        : '1.0.0',
                constraintLayout: '1.1.3',
                cicerone        : '5.0.0'
        ]
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects { subproject ->
    if (subproject.name == "sample-app") apply plugin: 'com.android.application' else apply plugin: 'com.android.library'
    if (subproject.name != "features-api") apply plugin: 'kotlin-kapt'
    if (subproject.name.contains("impl")) apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-android'

    android {
        compileSdkVersion 29
        defaultConfig {
            minSdkVersion 19
            targetSdkVersion 29
            versionCode 1
            versionName "1.0"
            vectorDrawables.useSupportLibrary = true
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])

        //Kotlin
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

        //AppCompat & RX
        implementation "androidx.appcompat:appcompat:$versions.appcompat"
        implementation "io.reactivex.rxjava2:rxjava:$versions.rxJava"
        implementation "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"

        //ConstraintLayout & Support & DI & Cicerone
        if (subproject.name != "features-api") {
            implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
            implementation "com.android.support:design:$versions.support"
            implementation "com.google.dagger:dagger:$versions.dagger"
            kapt "com.google.dagger:dagger-compiler:$versions.dagger"
            implementation "ru.terrakok.cicerone:cicerone:$versions.cicerone"

            if (subproject.name != "sample-app") {
                //Room & Lifecycle
                implementation "androidx.room:room-runtime:$versions.room"
                implementation "androidx.room:room-rxjava2:$versions.room"
                kapt "androidx.room:room-compiler:$versions.room"
                implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
                kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
            } else {
                //Features Implementations
                implementation project(':feature-diary-impl')
                implementation project(':feature-exercise-library-impl')
                implementation project(':feature-workout-library-impl')
            }

            //Material & Features APIs & Common
            if (subproject.name != "common") {
                implementation "com.google.android.material:material:$versions.material"
                implementation project(':common')
                implementation project(':features-api')
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}